name: gcc-build
on: [push]

# Use custom shell with -l so .bash_profile is sourced
defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  build:
    strategy:
      matrix:
        app: [jedi-ufs, jedi-fv3, ufs-weather-model, nceplibs]
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v2
        with:
          path: spack-stack
          submodules: true

      - name: setup
        run: |
          sudo apt-get install libcurl4-openssl-dev
          cd spack-stack
          source setup.sh
          ./create-env.py --site default --app ${{ matrix.app }} --name ${{ matrix.app }}
          cd envs/${{ matrix.app }}

          spack env create -d .
          spack env activate .

          spack external find
          spack compiler find
          spack config add "packages:all:compiler:[gcc@9]"

          echo "source ${GITHUB_WORKSPACE}/spack-stack/setup.sh" >> ~/.bash_profile
          echo "spack env activate ${GITHUB_WORKSPACE}/spack-stack/envs/${{ matrix.app }}" >> ~/.bash_profile

      - name: concretize
        run: |
          spack concretize --reuse
      
      - name: install
        run: |
          spack install
          
